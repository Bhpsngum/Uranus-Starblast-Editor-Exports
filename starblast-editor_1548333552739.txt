anim = 0;

rotateAroundZ = (name, oname, a, rotatePart, isWing=false) ->
  o = model.bodies[oname];
  
  if(isWing)
    part = model.wings[name];
  else
    part = model.bodies[name];
    
  ox = o.offset.x;
  oy = o.offset.y;
  
  dx = part.offset.x-ox;
  dy = part.offset.y-oy;
  
  ra = -a*0.0174533;
  
  ndx = dx*Math.cos(ra) - dy*Math.sin(ra);
  ndy = dx*Math.sin(ra) + dy*Math.cos(ra);
  
  part.offset.x = ndx+ox;
  part.offset.y = ndy+oy;
  
  if(rotatePart&&!isWing)
    part.angle+=a
    
anchorToPart = (name, oname, xx, yy, zz, isWing=false, oisWing) ->
    if(oisWing)
      o = model.wings[oname];
    else
      o = model.bodies[oname];
    
    if(isWing)
      part = model.wings[name];
    else
      part = model.bodies[name];
      
    part.offset.x = o.offset.x+xx;
    part.offset.y = o.offset.y+yy;
    part.offset.z = o.offset.z+zz;
  

multiplyArrays = (arr, m) ->
  k = [];
  for i in [0..arr.length-1]
    k.push(arr[i]*m[i])
  return k;

addArrays = (arr, m, mult=1) ->
  k = [];
  for i in [0..arr.length-1]
    k.push(arr[i]+m[i]*mult)
  return k;
  
multiplyArray = (arr, m) ->
  k = [];
  for i in [0..arr.length-1]
    k.push(arr[i]*m)
  return k;

addArray = (arr, m) ->
  k = [];
  for i in [0..arr.length-1]
    k.push(arr[i]+m)
  return k;
  
reverseArray = (arr) ->
  k = [];
  for i in [arr.length-1..0]
    k.push(arr[i])
  return k;
  
cycleArray = (arr, shift) ->
  k = [];
  j = shift
  for i in [0..arr.length-1]
    k.push(arr[j])
    j++
    if(j>arr.length-1)
      j = 0
  return k;
  
fillArray = (what, length) ->
  k = [];
  for i in [0..length-1]
    k.push(what)
  return k;
  
fillArrayIndexes = (length) ->
  k = [];
  for i in [0..length-1]
    k.push(i)
  return k;
  
fillArrayAlternate = (options, sequence) ->
  k = [];
  currentOption = 0;
  for i in [0..sequence.length-1]
    for j in [0..sequence[i]]
      k.push(options[currentOption])
    currentOption++
    if(currentOption>=options.length)
      currentOption = 0
  return k;
  
segments = (num) ->
  k = [];
  for i in [0..num-1]
    k.push((360/num)*i)
  return k;

circle = (id, xx, yy, zz, segments, radPosY, radPosZ, tx, h=1) ->
  widths = [];
  heights = [];
  posx = [];
  m = model;
  for i in [0..radPosY.length]
    posx.push(0);
    heights.push(h);
    widths.push(radPosY[i]*Math.tan(Math.PI/segments))
  for i in [0..segments] by 1
    m.bodies[id+"segment"+i] = 
      section_segments: 4
      offset:
        x: xx
        y: yy
        z: zz
      position:
        x: posx
        y: radPosY
        z: radPosZ
      width: widths
      height: heights
      angle: 360*(i/segments)
      texture: tx
  
wingFixedBumps = (xx, yy, zz, lengths, widths, angles, positions, tx, bumpPos, bumpS, toler) ->
  anew = [];
  l = [];
  w = [];
  p = [];
  for i in [0..angles.length-1]
    anew.push(angles[i])
    l.push(lengths[i])
    w.push(widths[i])
    p.push(positions[i])
    if(i==angles.length-1)
      break;
    if(Math.abs(angles[i]-angles[i+1])>toler)
      anew.push(angles[i])
      l.push(0)
      w.push(widths[i+1])
      p.push(positions[i+1])
  
  l.unshift(0)
  w.unshift(0)
  p.unshift(positions[0])
  anew.unshift(anew[0])
  
  w.push(widths[widths.length-1])
  p.push(positions[positions.length-1])
  
  l.push(0)
  w.push(widths[widths.length-1])
  p.push(positions[positions.length-1])
  anew.push(anew[anew.length-1])
  
  return k = 
    doubleside: true
    offset:
      x: xx
      y: yy
      z: zz
    length: l
    width: w
    angle: anew
    position: p
    texture: tx
    bump:
      position: bumpPos
      size: bumpS

squareBody = (id, xx, yy, zz, w, h, posx, posy, posz, txtop, txsides, txbottom, bump, a=0, sbumpMult=1, doubleSides=false) ->
  flatw = [];
  flath = [];
  for i in [0..w.length]
    flatw.push(bump*sbumpMult)
    flath.push(bump)
  
  xoff = 0.01
  if(a!=0) 
    xoff = 0
  
  sides = 
    section_segments: 4
    offset:
      x: xx+xoff
      y: yy
      z: zz
    position:
      x: addArrays(posx,w,1)
      y: posy
      z: posz
    width: flatw
    height: h
    texture: txsides
    angle: a
  top = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h)
    width: w
    height: flath
    texture: txtop
    angle: a
  bottom = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h,-1)
    width: w
    height: flath
    texture: txbottom
    angle: a
  if(doubleSides)
    dsides = 
      section_segments: 4
      offset:
        x: xx+xoff
        y: yy
        z: zz
      position:
        x: multiplyArray(addArrays(posx,w,-1), 1)
        y: posy
        z: posz
      width: flatw
      height: h
      texture: txsides
      angle: a
    model.bodies[id+"dsides"] = dsides;
    
  model.bodies[id+"t"] = top;
  model.bodies[id+"b"] = bottom;
  model.bodies[id+"sides"] = sides;
  
bodyStarY = (name, number, aroundX, aroundY, aoffset = 0, offx = 0, spawn) ->
  b = model.bodies[name]
  
  delete model.bodies[name]
  
  for i in [0..(number-1)] by 1
    
    if(spawn!=undefined&&!spawn[i])
      continue
    
    if(i == 0)
      n = name
    else
      n = name+"star"+i
    nposx = [];
    nposz = [];
    
    ang = (i*360/number)+aoffset
    a = ang
    ang = ang*0.0174533

    for j in [0..b.position.x.length-1] by 1
      if(j>=b.position.z.length)
        break;
      ox = b.position.x[j]
      oz = b.position.z[j]
      nposx.push(ox*Math.cos(ang)-oz*Math.sin(ang))
      nposz.push(ox*Math.sin(ang)+oz*Math.cos(ang))
    
    ox = b.offset.x-aroundX
    oz = b.offset.z-aroundY
    
    segments = b.section_segments
    
    if(segments.length != undefined)
      segments = addArray(segments,a)
    
    model.bodies[n] =
      section_segments: segments
      offset:
        x: 0
        y: b.offset.y
        z: aroundY+ox*Math.sin(ang)+oz*Math.cos(ang)+aroundY
      position:
        x: addArray(nposx,ox*Math.cos(ang)-oz*Math.sin(ang)+aroundX+offx)
        y: b.position.y.slice(0)
        z: addArray(nposz,0)
      width: b.width.slice(0)
      height: b.height.slice(0)
      texture: b.texture.slice(0)
      angle: b.angle
      propeller: b.propeller
      vertical: b.vertical
      laser: b.laser
  
bodyStar = (name, number) ->
  b = model.bodies[name]
  for i in [0..number-1] by 1
    if(i == 0)
      n = name
    else
      n = name+"star"+i
    model.bodies[n] =
      section_segments: b.section_segments
      offset:
        x: b.offset.x
        y: b.offset.y
        z: b.offset.z
      position:
        x: b.position.x.slice(0)
        y: b.position.y.slice(0)
        z: b.position.z.slice(0)
      width: b.width.slice(0)
      height: b.height.slice(0)
      texture: b.texture.slice(0)
      angle: b.angle+(i*360/number)
      vertical: b.vertical
      laser: b.laser
      
shieldPiece = (xx, yy, zz, t=1) ->
  return k =
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: [-10,-10,-5,-5,0,0,35]
      z: multiplyArray([0,0,2,2,4,4,60,0,0],t)
    width: [0,20,20,5,5,35,25]
    height: [0,5,5,3,3,3,0]
    texture: [3,3+14*glRet,3,4,3,63]
    angle: 0
    
mapToRange = (v, min, max) ->
  if(v<min)
    return 0
  if(v>max)
    return 1
  return (v-min)/(max-min)

duplicateBody = (name, newName) ->
  if(newName==undefined)
    newName = name+"duplicate"
  b = model.bodies[name]
  model.bodies[newName] =
    section_segments: b.section_segments
    offset:
      x: b.offset.x
      y: b.offset.y
      z: b.offset.z
    position:
      x: b.position.x.slice(0)
      y: b.position.y.slice(0)
      z: b.position.z.slice(0)
    width: b.width.slice(0)
    height: b.height.slice(0)
    texture: b.texture.slice(0)
  n = model.bodies[newName]
  if(b.angle!=undefined)
    n.angle = b.angle
  if(b.propeller!=undefined)
    n.propeller = b.propeller
  return n

exhaust = (xx, yy, zz, size) ->
  return k =
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: [0,0]
      z: [0,0,0,0,0,0,0,0,0]
    width: [size,size]
    height: [size,size]
    texture: ["yeet"] 
    propeller: true
    
bodyTubeRepeatMirror = (name) ->
  b = model.bodies[name]
  l = b.width.length-1
  newpx = b.position.x.slice(0,l)
  newpy = b.position.y.slice(0,l)
  newpz = b.position.z.slice(0,l)
  newW = b.width.slice(0,l)
  newH = b.height.slice(0,l)
  newtx = b.texture.slice(0,l)
  for i in [l..0]
    newpx.push(b.position.x[i])
    newpy.push(b.position.y[i]*-1)
    newpz.push(b.position.z[i])
    
    newW.push(b.width[i])
    newH.push(b.height[i])
    
  for i in [b.texture.length-1..0]  
    newtx.push(b.texture[i])
    
  b.position.x = newpx
  b.position.y = newpy
  b.position.z = newpz
  b.width = newW
  b.height = newH
  b.texture = newtx
  
label = (xx, yy, zz, length, width = 0.3) ->
  return k =
    section_segments: [-90,90]
    offset:
      x: 0
      y: yy-width
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: addArray([0,length],xx)
      z: [0,0,0,0,0,0,0,0,0]
    width: [width,width]
    height: [0,0,0,0]
    texture: [0.7]
    angle: 90
    
pipeBottom = (xx, yy, zz) ->
  return k =
    section_segments: 8
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,-4,-10,0,0,0,0,0,0,0,0]
      y: [-15,-8,-5,0]
      z: [0,0,0,0,0,0,0,0,0,0,0]
    width: [3,3,6,3]
    height: [3,3,3,3]
    texture: [3]
    angle: 180
    vertical: true
    
cockpitPod = (xx, yy, zz, ang) ->
  return k = 
    section_segments: 8
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: [0,3,3,4,4,4.5,4.5]
      z: [0,0,0,0,0,0,0,0,0]
    width: [2,2,1.8,1.4,1.6,1,0]
    height: [2,2,1.8,1.4,1.6,1,0]
    texture: [1,1,17,1,1] 
    vertical: true
    angle: ang
      
yeet = 0

parabolicDish = (xx, yy, zz, angle, tx, stepAmount, step, stepunit, showfocus = false) ->
  
  if(showfocus)
    yeet = 
      section_segments: 4
      offset:
        x: xx
        y: yy-(1/(4*(1/stepunit)*(1/stepunit)))
        z: zz
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-1,0,1]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,1,0]
      height: [0,1,0]
      texture: [17] 
  
  rad = []
  ypos = []
  
  for i in [0..stepAmount-1]
    ypos.push(-(step/stepunit*i)*(step/stepunit*i))
    rad.push(step*i)
  
  lastypos = ypos[ypos.length-1]
  
  for i in [stepAmount-1..0]
    ypos.push((ypos[i]-lastypos)*1.1+ypos[i])
    rad.push(rad[i]*1.1)
  
  return k = 
    section_segments: 16
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: multiplyArray(ypos,0)
      y: ypos
      z: multiplyArray(ypos,0)
    width: rad
    height: rad
    texture: tx
    angle: angle
    
thrustCircle = (xx, yy, zz) ->
  return k =
    section_segments: [80,90,100,80+180,90+180,100+180]
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: [-2,-2,2,2]
      z: [0,0,0,0,0,0,0,0,0]
    width: multiplyArray([0,3,3,0],zz/14)
    height: multiplyArray([0,3,3,0],zz/14)
    texture: [2.5]

thrustCircleStruct = (xx, yy, zz) ->
  return k =
    section_segments: addArray(segments(8),22.5)
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0,0,0,0]
      y: [-2,-4,-4,-2,2,4,4,2,-2]
      z: [0,0,0,0,0,0,0,0,0,0,0,0]
    width: [15,16,18,19,19,18,16,15,15]
    height: [15,16,18,19,19,18,16,15,15]
    texture: [63] 

sphere = (xx, yy, zz, step, length, radius, tx, segments = 16, startAt = 0, endAfter = -1) ->
  
  rad = []
  ypos = []
  
  if(endAfter<0)
    endAfter = (length/step)+1
  
  flip = length<0
  if(length<0) 
    length = -length
  i = 0
  for ycurrent in [0..length] by step
    i++
    if(i<startAt||i>endAfter)
      continue
    ypos.push((if flip then -1 else 1)*ycurrent)
    xpos = (ycurrent-length/2)*2/length
    rad.push(Math.sqrt(1-xpos*xpos)*radius)
  
  return k = 
    section_segments: segments
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: fillArray(0,ypos.length)
      y: ypos
      z: fillArray(0,ypos.length)
    width: rad
    height: rad
    texture: tx 

pipesFront = (offx) ->
  return k =
    section_segments: 6
    offset:
      x: 0
      y: 0
      z: 0
    position:
      x: addArray([0,0,0,0,0,0,0,0],offx)
      y: addArray([-10,-5,0,5,15],-50)
      z: [-15,-5,-1,0,0,0,0,0,0]
    width: [3,3,3,3,3]
    height: [3,3,3,3,3]
    texture: [63] 
    vertical: true
    angle: 0
###
"lasers":[
{"x":1.072,"y":-1.76,"z":0.048,"angle":0,"damage":[12,12],
"rate":6,"type":1,"speed":[50,50],"number":2,"spread":0,"error":0.5,"recoil":0},
{"x":-1.072,"y":-1.76,"z":0.048,"angle":0,"damage":[12,12],
"rate":6,"type":1,"speed":[50,50],"number":2,"spread":0,"error":0.5,"recoil":0}]
###

###'"specs":{"shield":{"capacity":[350,350],"reload":[2,2]},
"generator":{"capacity":[750,750],"reload":[30,30]},
"ship":{"mass":130,"speed":[150,150],"rotation":[70,70],"acceleration":[100,100]}},
###

    

model =
  name: 'Hotswap Fighter'
  level: 6
  model: 24+anim
  size: 2.3
  specs:
    shield:
      capacity: [1600,100]
      reload: [1,1]
    generator:
      capacity: [350,60]
      reload: [50,100]
    ship:
      mass: 300
      speed: [150,150]
      rotation: [5,60]
      acceleration: [5+anim*-4,100]
  bodies:
    
    front:
      section_segments: [55,90,125,235,270,305]
      offset:
        x: 0
        y: -80
        z: -3
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-70,20,42,42,40,42,42]
        z: [0,0,0,0,0,0,0,0,0]
      width: [20,20,17,15,14,13,0]
      height: [15,15,10,8,6,5,0]
      texture: [63,63,63,2.5,3.5,17.55]
      angle: 180
    frontDeco1:
      section_segments: addArray(segments(4),45)
      offset:
        x: 16
        y: -100
        z: -3
      position:
        x: [-5,-2.5,2.5,5,0,12,0,0,0,0,0]
        y: [-10,0,10,20]
        z: [0,0,0,0,1,1,1,1,0,0,0]
      width: [.01,3.5,3.5,.01]
      height: [7,7,7,7]
      texture: [4,4,4,10.8,8,10,1]
    frontDeco2:
      section_segments: addArray(segments(4),45)
      offset:
        x: 16
        y: -115
        z: -3
      position:
        x: [-2.5,-2.5,2.5,5,0,12,0,0,0,0,0]
        y: [0,0,10,20]
        z: [0,0,0,0,1,1,1,1,0,0,0]
      width: [0,3.5,3.5,.01]
      height: [0,5,7,7]
      texture: [4,4,4,10.8,8,10,1]
    frontSides:
      section_segments: addArray(segments(4),45)
      offset:
        x: 17
        y: 0
        z: -3
      position:
        x: [-5,0,0,0,12,0,0,0,0,0]
        y: [-100,-80,-50,-47,-15,-15,15,17]
        z: [0,0,0,1,1,1,1,1,0,0,0]
      width: [.01,7,7,5,5,32,32,0.2]
      height: [12,13,13,9,9,8,8,8]
      texture: [4,4,4,10.8,8,10,1]
    sideFlow:
      section_segments: addArray(segments(4),45)
      offset:
        x: 1
        y: 0
        z: -3
      position:
        x: [0,0,0,0,12,0,0,0,0,0]
        y: [10,35,30]
        z: [5,1,0,1,1,1,1,1,0,0,0]
      width: [12,15]
      height: [24,8]
      texture: [11] 
      angle: 90
    
    cockpitBack:
      section_segments: addArray(segments(6),360/12)
      offset:
        x: 0
        y: -40
        z: 5
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-50,-40,10,10,20,30,35]
        z: [0,0,0,3,5,5,0,0,0]
      width: [7,11,20,15,20,20,0]
      height: [0,3,4,10,10,10,0]
      texture: [.8,.8,2.8,2.8,2.8,2.8] 
    cockpit:
      section_segments: addArray(segments(8),360/16)
      offset:
        x: 0
        y: -40
        z: 7.5
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-40,-35,-15,5,10]
        z: [0,0,0,0,0,0,0,0,0]
      width: [5,6.5,9,9,9]
      height: [0,2,8,9,9]
      texture: [3.1,9,9,11] 
      
    cannons:
      section_segments: 6
      offset:
        x: 34
        y: -50
        z: -2
      position:
        x: [0,0,0,0,0,0,0,0,0,0,2,2,0]
        y: [-80,-85,-80,-35,-20,-20,-15,4,5,20,22,60]
        z: [0,0,0,0,0,0,0,0,0,0,0,0,0]
      width: [0,2,3,3,3,5,5,5,5,5,2,2]
      height: [0,2,3,3,3,7,8,8,5.5,5.5,2,2]
      texture: [16.8,12,12,17.8,0.8,0.8,11,0.8,0.8,0.8,2.8] 
      laser:
        damage: [15,6]
        rate: 2
        type: 2
        speed: [60,240]
        number: 1
        error: 5
        recoil: 40
    cannonsConnect:
      section_segments: addArray(segments(4),45)
      offset:
        x: 34
        y: -45
        z: 0
      position:
        x: [-0,-5,5,0,0,0,0,0]
        y: [-8,-8,0]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,25,25]
      height: [0,3.5,3.5]
      texture: [4,4] 
      angle:90
    
    trianglesFrontTop:
      section_segments: [135,225,315]
      offset:
        x: 0
        y: -20
        z: 12
      position:
        x: addArray([14,0,0,14,0,0,0,0],-25)
        y: [-12,-10,0,70]
        z: [7,0,0,-8,0,0,0,0,0]
      width: [0,20,20,0]
      height: [0,12,12,0]
      texture: [63] 
      angle: 180
    trianglesFrontBottom:
      section_segments: [45,135,315]
      offset:
        x: 0
        y: -20
        z: -12
      position:
        x: addArray([-14,0,0,-14,0,0,0,0],25)
        y: [-12,-10,0,70]
        z: [-3,0,0,4,0,0,0,0,0]
      width: [0,20,20,0]
      height: [0,6,6,0]
      texture: [63] 
      angle: 180
      
    trianglesBackTop:
      section_segments: [135,225,315]
      offset:
        x: 0
        y: 20
        z: 12
      position:
        x: addArray([14,0,0,14,0,0,0,0],-25)
        y: [-12,-10,0,30]
        z: [7,0,0,-8,0,0,0,0,0]
      width: [0,20,20,0]
      height: [0,12,12,0]
      texture: [63] 
      angle: 0
    trianglesBackBottom:
      section_segments: [45,135,315]
      offset:
        x: 0
        y: 20
        z: -12
      position:
        x: addArray([-14,0,0,-14,0,0,0,0],25)
        y: [-12,-10,0,30]
        z: [-3.5,0,0,4,0,0,0,0,0]
      width: [0,20,20,0]
      height: [0,6,6,0]
      texture: [63] 
      angle: 0
      
    engines:
      section_segments: addArray(segments(4),45)
      offset:
        x: -30
        y: 25
        z: -2
      position:
        x: [0,6,13,12.7,16,16,0,0]
        y: [-5,-2,5,5,8,8,-5,-5]
        z: [0,0,0,0,0,0,0,0,0]
      width: [20,25,25,20,20,15,15,0]
      height: [9,9,8,7,7,5,5,0]
      texture: [1,1,1,13,18,17] 
      angle: -47
    enginesConnect:
      section_segments: addArray(segments(4),360/8)
      offset:
        x: 11
        y: 37
        z: -2
      position:
        x: [2,0,0,0,0,0,0]
        y: [8,10]
        z: [0,0,0]
      width: [1,1,0]
      height: [8,8,0]
      texture: [.8,.8,2.8,2.8,2.8,2.8] 
    exhaust1: exhaust(30,50,-2,6)
    exhaust2: exhaust(25,55,-2,8)
    exhaust3: exhaust(20,60,-2,6)
    
    reactor:
      section_segments: addArray(segments(12),360/24)
      offset:
        x: 0
        y: 5
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        y: [-20,-20,-18,-17,-17,-10,-8,15,17,22,23,22,27,28]
        z: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
      width: [0,10,11,12,16,16,18,18,17,17,13,12,11,0]
      height: [0,10,11,12,16,16,18,18,17,17,13,12,11,0]
      texture: [17.94,4,3,3,3,3,3,3,3,8,13,13,18] 
      vertical: true
      angle: 180
    reactorTopPiece:
      section_segments: addArray(segments(6),360/12)
      offset:
        x: 0
        y: 0
        z: 22
      position:
        x: [0,0,0,0,0,0,0,0]
        y: addArray([0,4,4.5,6,7],8)
        z: [0,0,0,0,0,0,0,0,0]
      width: [4,4,3,3,2]
      height: [3,3,2,2,0]
      texture: [18,4,8,3.8]   
      angle: 360/12
    reactorPipes1:
      section_segments: 6
      offset:
        x: 0
        y: 0
        z: 23
      position:
        x: addArray([0,0,0,0,0,0,0,0],1)
        y: addArray([0,4,5,6,7],8)
        z: [0,0,-1,-3,0,0,0,0,0]
      width: [1,1,1,1]
      height: [1,1,1,1]
      texture: [63] 
      angle: 0
    reactorPipes2:
      section_segments: 6
      offset:
        x: 0
        y: 0
        z: 23
      position:
        x: addArray([0,0,0,0,0,0,0,0],-1)
        y: addArray([0,4,5,6,7],8)
        z: [0,0,-1,-3,0,0,0,0,0]
      width: [1,1,1,1]
      height: [1,1,1,1]
      texture: [63] 
      angle: 0  
    reactorBack:
      section_segments: addArray(segments(6),360/12)
      offset:
        x: 0
        y: 16
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-12,-9,9,12]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,10,10,0]
      height: [0,10,10,0]
      texture: [4,10.5,4] 
      angle: -90
    
    underside:
      section_segments: 6
      offset:
        x: 0
        y: 0
        z: -14
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-95,-90,-10,16,50,52]
        z: [4,4,0,-0,4,4,0,0,0]
      width: [0,10,15,15,10,0]
      height: [0,2,2,2,2,0]
      texture: [3.8] 
    
    canisterPipes1:
      section_segments: addArray(segments(6),360/12)
      offset:
        x: 0
        y: 23
        z: 6
      position:
        x: addArray([1,1,0,0,0,0,0,0],1)
        y: [-7,5,5,7,10,12]
        z: [0,0,0,0,-3,-8,0,0,0,0,0]
      width: [4,4,2,2,2,2]
      height: [2.5,2.5,2,2,2,2]
      texture: [3.8,63] 
    canisterPipes2:
      section_segments: addArray(segments(6),360/12)
      offset:
        x: 0
        y: 23
        z: 6
      position:
        x: addArray([-1,-1,0,0,-4,-4,-4,-4,0,0,0],5)
        y: [-7,5,5,10,18,20,23,25]
        z: [0,0,0,0,0,0,-3,-8,0,0,0,0,0]
      width: [4,4,2,2,2,2,2,2]
      height: [2.5,2.5,2,2,2,2,2,2]
      texture: [3.8,63] 
    canisterHolders:
      section_segments: addArray(segments(6),360/12)
      offset:
        x: 11
        y: 40
        z: -2
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-50,-40,10,10,20,30,35]
        z: [0,0,0,3,5,5,0,0,0]
      width: [0,2,1,0]
      height: [0,8,8,0]
      texture: [.8,.8,2.8,2.8,2.8,2.8] 
    canister1:
      section_segments: 8
      offset:
        x: 1
        y: 45
        z: -2
      position:
        x: [0,0,0,0,0,0,0,0]
        y: addArray([5,10,11,13,15,15],-6)
        z: [0,0,0,0,0,0,0,0,0]
      width: [6,6,6,5,3,0]
      height: [6,6,6,5,3,0]
      texture: [63,3,63] 
      angle: 90
    canister2:
      section_segments: 8
      offset:
        x: 1
        y: 32
        z: -2
      position:
        x: [0,0,0,0,0,0,0,0]
        y: addArray([5,10,11,13,15,15],-6)
        z: [0,0,0,0,0,0,0,0,0]
      width: [6,6,6,5,3,0]
      height: [6,6,6,5,3,0]
      texture: [63,3,63] 
      angle: 90
    
mirrorYeet = (name) ->
  b = duplicateBody(name)
  b.position.x = multiplyArray(b.position.x,-1)
  b.width = multiplyArray(b.width,-1)
  b.section_segments = reverseArray(b.section_segments)

mirrorYeet("trianglesFrontTop")
mirrorYeet("trianglesFrontBottom")

mirrorYeet("trianglesBackTop")
mirrorYeet("trianglesBackBottom")
    
bodyStar("reactorPipes1",6)
bodyStar("reactorPipes2",6)

bodyStar("reactorTopPiece",6)
    
offy = 10;
offz = -3
for k,v of model.bodies 
  if(v.vertical)
    v.offset.z += -offy;
    v.offset.y += offz;
  else
    v.offset.y += offy;
    v.offset.z += offz;
    
for k,v of model.wings 
  v.offset.y += offy;
    
###
model.bodies["xAxis"] = 
  section_segments: 4
  offset:
    x: 0
    y: 0
    z: 0
  position:
    x: [0,0,0,0,0,0,0,0]
    y: [0,1000]
    z: [0,0,0,0,0,0,0,0,0]
  width: [0,3,3,0]
  height: [0,3,3,0]
  texture: [63] 
  angle:90
model.bodies["yAxis"] = 
  section_segments: 4
  offset:
    x: 0
    y: 0
    z: 0
  position:
    x: [0,0,0,0,0,0,0,0]
    y: [0,1000]
    z: [0,0,0,0,0,0,0,0,0]
  width: [0,3,3,0]
  height: [0,3,3,0]
  texture: [1] 
model.bodies["zAxis"] = 
  section_segments: 4
  offset:
    x: 0
    y: 0
    z: 0
  position:
    x: [0,0,0,0,0,0,0,0]
    y: [0,1000]
    z: [0,0,0,0,0,0,0,0,0]
  width: [0,3,3,0]
  height: [0,3,3,0]
  texture: [6]
  vertical:true  
###

return model;