#anim = 1;

rotateAroundZ = (name, oname, a, rotatePart, isWing=false) ->
  o = model.bodies[oname];
  
  if(isWing)
    part = model.wings[name];
  else
    part = model.bodies[name];
    
  ox = o.offset.x;
  oy = o.offset.y;
  
  dx = part.offset.x-ox;
  dy = part.offset.y-oy;
  
  ra = -a*0.0174533;
  
  ndx = dx*Math.cos(ra) - dy*Math.sin(ra);
  ndy = dx*Math.sin(ra) + dy*Math.cos(ra);
  
  part.offset.x = ndx+ox;
  part.offset.y = ndy+oy;
  
  if(rotatePart&&!isWing)
    part.angle+=a
    
anchorToPart = (name, oname, xx, yy, zz, isWing=false, oisWing) ->
    if(oisWing)
      o = model.wings[oname];
    else
      o = model.bodies[oname];
    
    if(isWing)
      part = model.wings[name];
    else
      part = model.bodies[name];
      
    part.offset.x = o.offset.x+xx;
    part.offset.y = o.offset.y+yy;
    part.offset.z = o.offset.z+zz;
  

multiplyArrays = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m[i])
  return k;

addArrays = (arr, m, mult=1) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m[i]*mult)
  return k;
  
multiplyArray = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m)
  return k;

addArray = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m)
  return k;

circle = (id, xx, yy, zz, segments, radPosY, radPosZ, tx, h=1) ->
  widths = [];
  heights = [];
  posx = [];
  m = model;
  for i in [0..radPosY.length]
    posx.push(0);
    heights.push(h);
    widths.push(radPosY[i]*Math.tan(Math.PI/segments))
  for i in [0..segments] by 1
    m.bodies[id+"segment"+i] = 
      section_segments: 4
      offset:
        x: xx
        y: yy
        z: zz
      position:
        x: posx
        y: radPosY
        z: radPosZ
      width: widths
      height: heights
      angle: 360*(i/segments)
      texture: tx
  
wingFixedBumps = (xx, yy, zz, lengths, widths, angles, positions, tx, bumpPos, bumpS, toler) ->
  anew = [];
  l = [];
  w = [];
  p = [];
  for i in [0..angles.length-1]
    anew.push(angles[i])
    l.push(lengths[i])
    w.push(widths[i])
    p.push(positions[i])
    if(i==angles.length-1)
      break;
    if(Math.abs(angles[i]-angles[i+1])>toler)
      anew.push(angles[i])
      l.push(0)
      w.push(widths[i+1])
      p.push(positions[i+1])
  
  l.unshift(0)
  w.unshift(0)
  p.unshift(positions[0])
  anew.unshift(anew[0])
  
  w.push(widths[widths.length-1])
  p.push(positions[positions.length-1])
  
  l.push(0)
  w.push(widths[widths.length-1])
  p.push(positions[positions.length-1])
  anew.push(anew[anew.length-1])
  
  return k = 
    doubleside: true
    offset:
      x: xx
      y: yy
      z: zz
    length: l
    width: w
    angle: anew
    position: p
    texture: tx
    bump:
      position: bumpPos
      size: bumpS

squareBody = (id, xx, yy, zz, w, h, posx, posy, posz, txtop, txsides, txbottom, bump, a=0, sbumpMult=1, doubleSides=false) ->
  flatw = [];
  flath = [];
  for i in [0..w.length]
    flatw.push(bump*sbumpMult)
    flath.push(bump)
  
  xoff = 0.01
  if(a!=0) 
    xoff = 0
  
  sides = 
    section_segments: 4
    offset:
      x: xx+xoff
      y: yy
      z: zz
    position:
      x: addArrays(posx,w,1)
      y: posy
      z: posz
    width: flatw
    height: h
    texture: txsides
    angle: a
  top = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h)
    width: w
    height: flath
    texture: txtop
    angle: a
  bottom = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h,-1)
    width: w
    height: flath
    texture: txbottom
    angle: a
  if(doubleSides)
    dsides = 
      section_segments: 4
      offset:
        x: xx+xoff
        y: yy
        z: zz
      position:
        x: multiplyArray(addArrays(posx,w,-1), 1)
        y: posy
        z: posz
      width: flatw
      height: h
      texture: txsides
      angle: a
    model.bodies[id+"dsides"] = dsides;
    
  model.bodies[id+"t"] = top;
  model.bodies[id+"b"] = bottom;
  model.bodies[id+"sides"] = sides;
  
bodyStar = (name, number) ->
  b = model.bodies[name]
  for i in [1..number-1] by 1
    n = name+"star"+i
    model.bodies[n] =
      section_segments: b.section_segments
      offset:
        x: b.offset.x
        y: b.offset.y
        z: b.offset.z
      position:
        x: b.position.x.slice(0)
        y: b.position.y.slice(0)
        z: b.position.z.slice(0)
      width: b.width.slice(0)
      height: b.height.slice(0)
      texture: b.texture.slice(0)
      angle: b.angle+(i*360/number)

###
"lasers":[
{"x":1.072,"y":-1.76,"z":0.048,"angle":0,"damage":[12,12],
"rate":6,"type":1,"speed":[50,50],"number":2,"spread":0,"error":0.5,"recoil":0},
{"x":-1.072,"y":-1.76,"z":0.048,"angle":0,"damage":[12,12],
"rate":6,"type":1,"speed":[50,50],"number":2,"spread":0,"error":0.5,"recoil":0}]
###

###'"specs":{"shield":{"capacity":[350,350],"reload":[2,2]},
"generator":{"capacity":[750,750],"reload":[30,30]},
"ship":{"mass":130,"speed":[150,150],"rotation":[70,70],"acceleration":[100,100]}},
###
model =
  name: 'Unstablecore LDB'
  level: 6
  model: 3
  size: 0.6
  specs:
    shield:
      capacity: [300,100]
      reload: [2,3]
    generator:
      capacity: [500,60]
      reload: [100,15]
    ship:
      mass: 140
      speed: [150,150]
      rotation: [60,60]
      acceleration: [100,100]
  bodies:
    frontTop:
      section_segments: 4
      offset:
        x: 0
        y: 13
        z: 10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-58,-40,10,30]
        z: [0,0,0,0,0,0,0,0,0]
      width: [9,15,15,9]
      height: [0,1,1,0]
      texture: [1] 
    frontBottom:
      section_segments: 4
      offset:
        x: 0
        y: 13
        z: -10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-58,-40,10,30]
        z: [0,0,0,0,0,0,0,0,0]
      width: [9,15,15,9]
      height: [0,1,1,0]
      texture: [4] 
    frontEnd:
      section_segments: 4
      offset:
        x: 1
        y: -45
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-1,8,20,21]
        z: [0,0,0,0,0,0,0,0,0]
      width: [30,30,20,0]
      height: [10,10,6,0]
      texture: [1,63,63] 
      angle:90
    frontSides:
      section_segments: 6
      offset:
        x: 15
        y: 0
        z: 0
      position:
        x: [-6,0,0,10,10,6,0,0]
        y: [-45,-27,23,43,90,90,100,100,105,105]
        z: [0,0,0,0,0,0,0,0,0,0,0]
      width: [10,10,10,5,5,10,10,0]
      height: [10,10,10,10,10,10,5,0]
      texture: [63] 
      
    frontTopDeco1:
      section_segments: 4
      offset:
        x: 10
        y: -30
        z: 10.5
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-10,-6,2,7]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,2,2,0]
      height: [0,1,1,0]
      texture: [4] 
      angle:30
    frontTopDeco2:
      section_segments: 4
      offset:
        x: 10
        y: -10
        z: 10.5
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-10,-6,2,7]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,2,2,0]
      height: [0,1,1,0]
      texture: [4] 
      angle:30
    frontTopDeco3:
      section_segments: 4
      offset:
        x: 10
        y: -20
        z: 10.5
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-10,-6,2,7]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,2,2,0]
      height: [0,1,1,0]
      texture: [4] 
      angle:30
      
    frontDeco:
      section_segments: 4
      offset:
        x: 9
        y: -36
        z: 10
      position:
        x: [0,0,0,6,0,0,0,0]
        y: [-40,-40,-10,10]
        z: [-10,-10,0,0,0,0,0,0,0]
      width: [0,3,3,0]
      height: [0,1,1,0]
      texture: [4] 
      
    cockpitBottom:
      section_segments: 6
      offset:
        x: 0
        y: 43
        z: -10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-20,0,30,47,57]
        z: [0,0,0,0,7,0,0,0,0]
      width: [17,29,29,29,18]
      height: [0,10,10,5,0]
      texture: [3.8] 
    cockpitFront:
      section_segments: 4
      offset:
        x: 11
        y: 30
        z: 10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-28,-7,5,13,15]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,5,10,14,14]
      height: [0,7,10,10,10]
      texture: [9,7,2] 
    cockpitBack:
      section_segments: 6
      offset:
        x: 1
        y: 90
        z: 0
      position:
        x: [0,0,0,10,0,0,0,0,0]
        y: [-1,10,20,25]
        z: [0,0,0,0,0,0,0,0,0]
      width: [20,20,20,0]
      height: [10,10,10,0]
      texture: [3.8,63] 
      angle:90
      
    coreConnectCockpitT:
      section_segments: 6
      offset:
        x: 0
        y: 95
        z: 15
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-40,-25,-10,-10,30]
        z: [-5,0,0,2,2,0,0,0,0,0]
      width: [20,20,20,10,10]
      height: [10,10,10,5,5]
      texture: [0.8,0.8,2.8,3.8] 
    coreConnectCockpitT2:
      section_segments: 6
      offset:
        x: 5
        y: 95
        z: 15
      position:
        x: [0,20,20,20,0,0,0,0,0]
        y: [-10,10,35,45]
        z: [0,0,0,0,0]
      width: [10,7,7,3]
      height: [5,5,5,5]
      texture: [3.8]  
      
    coreConnectCockpitB2:
      section_segments: 6
      offset:
        x: 5
        y: 95
        z: -15
      position:
        x: [10,10,10,20,20,20,0,0,0,0,0]
        y: [-40,-20,-10,10,35,45]
        z: [5,0,0,0,0,0,0]
      width: [7,7,7,7,7,3]
      height: [5,5,5,5,5,5]
      texture: [3.8]  
      
    coreMain:
      section_segments: 4
      offset:
        x: 0
        y: 160
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-30,-20,-20,-10]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,5,6,10]
      height: [0,21,25,25]
      texture: [17,63,4] 
      angle: 0
    coreCrystals:
      section_segments: 4
      offset:
        x: 0
        y: 160
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-35,-30,-25]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,5,0]
      height: [0,18,0]
      texture: [17] 
      angle: 360/16  
    coreTopArms:
      section_segments: 6
      offset:
        x: 0
        y: 160
        z: 26
      position:
        x: [0,0,0,0,0,0,0,0,0,0]
        y: [10,20,20,25,30,32,37,39]
        z: [0,0,0,0,-5,-7,-13,-13,0]
      width: [10,10,7,7,7,10,10,0]
      height: [5,5,4,4,4,6,6,0]
      texture: [18,63,3.8] 
      angle: 0
    coreBottomArms:
      section_segments: 6
      offset:
        x: 0
        y: 160
        z: -26
      position:
        x: [0,0,0,0,0,0,0,0,0,0]
        y: [10,20,20,25,30,32,37,39]
        z: multiplyArray([0,0,0,0,-5,-7,-13,-13,0],-1)
      width: [10,10,7,7,7,10,10,0]
      height: [5,5,4,4,4,6,6,0]
      texture: [18,63,3.8] 
      angle: 0
    coreStructure:
      section_segments: 6
      offset:
        x: 0
        y: 160
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [32,32,37,37]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,8,6,0]
      height: [0,25,18,0]
      texture: [2.8] 
      angle: 0
      
    coreConnectEnginesBB:
      section_segments: 6
      offset:
        x: 65
        y: 185
        z: -15
      position:
        x: [20,20,20,0,0,0,0,0,0,0]
        y: [-25,-15,10,35,45]
        z: [5,0,0,0,0,0,0]
      width: [7,7,7,7,3]
      height: [5,5,5,5,5]
      texture: [3.8]  
      angle:-90
    coreConnectEnginesBF:
      section_segments: 6
      offset:
        x: 75
        y: 160
        z: -15
      position:
        x: [20,20,0,0,0,0,0,0,0,0]
        y: [-15,-5,20,35,45]
        z: [5,0,0,0,0,0,0]
      width: [7,7,7,7,3]
      height: [5,5,5,5,5]
      texture: [3.8]  
      angle:-90
    coreConnectEnginesTB:
      section_segments: 6
      offset:
        x: 65
        y: 185
        z: 15
      position:
        x: [20,20,20,0,0,0,0,0,0,0]
        y: [-25,-15,10,35,45]
        z: [-5,0,0,0,0,0,0]
      width: [7,7,7,7,3]
      height: [5,5,5,5,5]
      texture: [3.8]  
      angle:-90
    coreConnectEnginesTF:
      section_segments: 6
      offset:
        x: 75
        y: 160
        z: 15
      position:
        x: [20,20,0,0,0,0,0,0,0,0]
        y: [-15,-5,20,35,45]
        z: [-5,0,0,0,0,0,0]
      width: [7,7,7,7,3]
      height: [5,5,5,5,5]
      texture: [3.8]  
      angle:-90
      
    engineConnectPointB:
      section_segments: 6
      offset:
        x: 90
        y: 190
        z: -7
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-25,-20,30,35]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,7,7,0]
      height: [0,10,10,0]
      texture: [3.8] 
    engineConnectPointT:
      section_segments: 6
      offset:
        x: 90
        y: 190
        z: 7
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-25,-20,30,35]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,7,7,0]
      height: [0,10,10,0]
      texture: [3.8] 
      
    enginesNacelles:
      section_segments: 8
      offset:
        x: 100
        y: 245
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-20,0,0,10,10,40,20]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,17,20,20,17,12,0]
      height: [0,17,20,20,17,12,0]
      texture: [4,63,18,63,13,17]
      propeller:true
    enginesFrontConnect:
      section_segments: 6
      offset:
        x: 100
        y: 141
        z: 0
      position:
        x: [-20,0,0,-20,0,0,0,0]
        y: [-15,-12,12,15]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,16,16,0]
      height: [0,15,15,0]
      texture: [1] 
      angle:90
    enginesFrontT:
      section_segments: 6
      offset:
        x: 100
        y: 126
        z: 10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-2,-2,0,0,-2,2,10,20]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,12,12,15,15,17,17,0]
      height: [0,7,7,9,9,11,11,0]
      texture: [16.8,16.8,18,4,63,2.8,2.8,2.8] 
    enginesFrontB:
      section_segments: 6
      offset:
        x: 100
        y: 126
        z: -10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-2,-2,0,0,-2,2,10,20]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,12,12,15,15,17,17,0]
      height: [0,7,7,9,9,11,11,0]
      texture: [16.8,16.8,18,4,63,2.8,2.8,2.8] 
    
    backWingsCoreConnect:
      section_segments: 6
      offset:
        x: 0
        y: 210
        z: -10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-16,-10,50,50]
        z: [10,0,0,0,0,0,0,0,0]
      width: [6,6,6,0]
      height: [20,10,10,0]
      texture: [3.8]
    backWingsCoreConnect2:
      section_segments: 6
      offset:
        x: 1
        y: 250
        z: -10
      position:
        x: [0,0,0,5,0,0,0,0]
        y: [-1,10,10,30,30]
        z: [0,0,0,0,0,0,0,0,0]
      width: [30,30,20,15,0]
      height: [15,15,8,5,0]
      texture: [3.8,3.8,63] 
      angle:90
      
    frontWingsConnect:
      section_segments: 6
      offset:
        x: 40
        y: 60
        z: 0
      position:
        x: [0,0,-40,-40,0,0,0,0]
        y: [-20,-10,10,10]
        z: [0,0,-10,-7,0,0,0,0,0]
      width: [40,40,30,0]
      height: [5,5,5,0]
      texture: [63,63] 
      angle:90
      
    coreBombLauncher:
      section_segments: 4
      offset:
        x: 0
        y: 160
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-10,0,10]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,10,0]
      height: [0,10,0]
      texture: [17] 
      laser:
        damage: [100,60]
        rate: 0.5
        type: 2
        speed: [3,240]
        number: 4
        angle: 360
        error: 0
      
  wings:
    fwings:
      doubleside: true
      offset:
        x: 40
        y: 70
        z: -10
      length: [0,20,0,20,0,20]
      width: [0,160,120,80,40]
      angle: [0,0,0,0,0,0]
      position: [-10,-10,10,30,70,0]
      texture: [63,63,4]
      bump:
        position: 40
        size: 5  
    bwings:
      doubleside: true
      offset:
        x: 25
        y: 260
        z: -10
      length: [0,30,20,0,20]
      width: [0,100,50,20]
      angle: [0,0,0,0,0,0]
      position: [-10,-10,-10,-25,0]
      texture: [63,63,4]
      bump:
        position: -40
        size: 5  
      
###
squareBody("sideEngines", 60, 25, 0, 
[8,13,13,8,0], [15,22,22,15,0], 
[0,0,0,0,0], [0,10,50,70,70], [0,0,0,0,0], 
[4], [4], [4], 2, 0, 1, true)

rotateAroundZ("frontSideArm1","frontSideArm1",-40*anim,1)
rotateAroundZ("frontSideAnchor","frontSideArm1",-40*anim)

anchorToPart("frontShieldWingBaseSides","frontSideAnchor",10,60,0)
anchorToPart("frontShieldWingBaseFront","frontSideAnchor",-41,-67,0)

anchorToPart("fWingPart1","frontSideAnchor",14,10,0)
anchorToPart("fWingPart2","frontSideAnchor",2,-53,0)
anchorToPart("fWingPart3","frontSideAnchor",-25,-70,0)

anchorToPart("fWingPart4","frontSideAnchor",14,10,0)
anchorToPart("fWingPart5","frontSideAnchor",2,-53,0)
anchorToPart("fWingPart6","frontSideAnchor",-25,-70,0)

anchorToPart("fWingTop","frontSideAnchor",-12,0,21)

circle("frontSideAnchors", 32, 0, 10, 16, [0,5,7,10,10,7,5,0], [0,0,-3,-3,-21,-21,-24,-24], [63,63,3,3,3,63,63],0);

circle("reactor1", 18, 38, 19, 16, [0,4,5,7,8], [0,0,-3,-3,-10], [18,17,3,3],0);
circle("reactor2", 15, 52, 20, 16, [0,4,5,7,8], [0,0,-3,-3,-10], [18,17,3,3],0);


if(anim==1)
  model.bodies.gunMain.laser = 
    damage: [70,60]
    rate: 1
    type: 2
    speed: [100,240]
    number: 1
    error: 0
else
  model.specs.ship.dash =
    rate: 2
    burst_speed: [240,240]
    speed: [150,150]
    acceleration: [200,70]
    initial_energy: [40,75]
    energy: [70,30]
###

squareBody("cockpit", 0, -15, 8, 
[7,10,10,23,23,23], [5,10,12,12,12,0], 
[0,0,0,0,0,0,0], [0,20,50,60,80,105], [-5,0,0,0,0,0,0], 
[9,9,1], [9,9,1,1,13], [9], 2, 0)

squareBody("engines", 100, 165, 0, 
[5,13,13,10,10,13,13,5], [5,17,17,17,17,17,17,5], 
[0,0,0,3,3,0,0,0,0], [-30,-20,-0,10,50,60,70,85], [0,0,0,0,0,0,0,0], 
[1,1,63,4,63,8,3], [1,1,63,4,63,8,3], [1,1,63,4,63,8,3], 3, 0, 1, true)


circle("reactorT", 0, 160, 30, 8, [0,10,12,16,18], [5,5,2,-3,-30], [8,17,3,4],0);
circle("reactorB", 0, 160, -30, 8, [0,10,12,16,18], multiplyArray([5,5,2,-3,-30],-1), [8,17,3,4],0);

bodyStar("coreMain",8)
bodyStar("coreCrystals",8)
bodyStar("coreTopArms",8)
bodyStar("coreBottomArms",8)
bodyStar("coreStructure",8)

#model.bodies.starTeststar1.offset.x = model.bodies.starTest.offset.x+20
#model.bodies.starTest.offset.x-=50

offy = -160;
for k,v of model.bodies 
  v.offset.y += offy;
    
for k,v of model.wings 
  v.offset.y += offy;
  
return model;