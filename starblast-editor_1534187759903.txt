y = 0

multiplyArray = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m)
  return k;

addArray = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m)
  return k;

pipe = (xx, yy, zz, w, angles, lengths, positions, tx, bumpm = 3) ->
  angles.unshift(angles[0]);
  angles.push(angles[angles.length-1]);
  lengths.unshift(0);
  lengths.push(0);
  positions.unshift(positions[0]);
  positions.push(positions[positions.length-1]);
  widths = [];
  for i in [0..angles.length]
    widths.push(w);
  return k = 
    offset:
        x: xx
        y: yy
        z: zz
      length: lengths
      width: widths
      angle: angles
      position: positions
      texture: tx
      doubleside:true
      bump:
        position: 0
        size: w*bumpm

canister = (xx, yy, zz, angle, radius, length, tx) ->
  return k =
    section_segments: 8
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: multiplyArray([-1,-0.9,-0.7,0.7,0.9,1], length)
      z: [0,0,0,0,0,0,0,0,0]
    width: multiplyArray([0,0.7,1,1,0.7,0],radius)
    height: multiplyArray([0,0.7,1,1,0.7,0],radius)
    texture: tx
    angle: angle

multiplyArrays = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m[i])
  return k;

addArrays = (arr, m, mult=1) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m[i]*mult)
  return k;

circle = (m, id, xx, yy, zz, segments, radPosY, radPosZ, tx, h=1) ->
  widths = [];
  heights = [];
  posx = [];
  for i in [0..radPosY.length]
    posx.push(0);
    heights.push(h);
    widths.push(radPosY[i]*Math.tan(Math.PI/segments))
  for i in [0..segments] by 1
    m.bodies[id+"segment"+i] = 
      section_segments: 4
      offset:
        x: xx
        y: yy
        z: zz
      position:
        x: posx
        y: radPosY
        z: radPosZ
      width: widths
      height: heights
      angle: 360*(i/segments)
      texture: tx
  return m

squareBody = (model, id, xx, yy, zz, w, h, posx, posy, posz, txtop, txsides, txbottom, bump, tp=true, sd=true, bm=true, autoClose=false, mirrorSides=false) ->
  flatw = [];
  flath = [];
  for i in [0..w.length]
    if(autoClose&&(i==0||i==w.length-1))
      flatw.push(0)
      flath.push(0)
    else
      flatw.push(bump)
      flath.push(bump)
  
  sides = 
    section_segments: 4
    offset:
      x: xx+0.01
      y: yy
      z: zz
    position:
      x: addArrays(posx,w,1)
      y: posy
      z: posz
    width: flatw
    height: h
    texture: txsides
  top = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h)
    width: w
    height: flath
    texture: txtop
  bottom = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h,-1)
    width: w
    height: flath
    texture: txbottom
    
  if(mirrorSides)
    msides = 
      section_segments: 4
      offset:
        x: xx-0.01
        y: yy
        z: zz
      position:
        x: addArrays(posx,w,-1)
        y: posy
        z: posz
      width: flatw
      height: h
      texture: txsides
  if(tp)
    model.bodies[id+"t"] = top;
  if(bm)
    model.bodies[id+"b"] = bottom;
  if(sd)
    model.bodies[id+"sides"] = sides;
  if(mirrorSides)
    model.bodies[id+"mirrorsides"] = msides;
    
  return model;

model =
  name: 'Ambassador'
  level: 6
  model: 2
  size: 1
  specs:
    shield:
      capacity: [230,400]
      reload: [3,6]
    generator:
      capacity: [150,280]
      reload: [40,55]
    ship:
      mass: 490
      speed: [60,80]
      rotation: [40,60]
      acceleration: [40,90]
  bodies:
    main:
      section_segments: 12
      offset:
        x: 0
        y: 0+y
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0,0,0,0,0,0]
        y: [-300,-295,-290,-240,-100,-60,0,50,120,170,280,310,315]
        z: [0,0,0,0,0,0,0,0,0,0,0,0,0]
      width: [0,15,35,50,70,60,50,50,55,65,70,60,0]
      height: [0,17,30,55,55,60,60,55,50,45,45,35,0]
      texture: [3]
    
      
###  wings:
    
    main:
      length: [0,70]
      width: [240,240,90]
      angle: [0,-10]
      position: [30,30,60]
      doubleside: true
      bump:
        position: 20
        size: 3
      texture: [11,18]
      offset:
        x: 90
        y: 75+y
        z: 0
        
    tipsT:
      length: [0,50]
      width: [90,90,40]
      angle: [90,100]
      position: [30,30,60]
      doubleside: true
      bump:
        position: 20
        size: 3
      texture: [63]
      offset:
        x: 190
        y: 110+y
        z: -25
        
    tipsB:
      length: [0,30]
      width: [90,90,40]
      angle: [-90,-115]
      position: [30,30,60]
      doubleside: true
      bump:
        position: 20
        size: 3
      texture: [63]
      offset:
        x: 190
        y: 110+y
        z: -25###
    
    
      
###
model = circle(model, "reactor", 0, 130+y, 35, 12, [0,12,15,22,25,30,34,38,40,45], [0,0,5,5,0,4,2,-15,-15,-30], [18,17,17,17,16,4],0) 
  
model = circle(model, "auxreactor1", 36, 75+y, 25, 8, [0,8,10,11,11,14,15,15], [0,0,-2,-2,0,0,-5,-20], [17,17,4,4,4,4,1],0) 
model = circle(model, "auxreactor2", 36, 40+y, 25, 8, [0,8,10,11,11,14,15,15], [0,0,-2,-2,0,0,-5,-20], [17,17,4,4,4,4,1],0) 
model = circle(model, "auxreactor3", 36, 5+y, 25, 8, [0,8,10,11,11,14,15,15], [0,0,-2,-2,0,0,-5,-20], [17,17,4,4,4,4,1],0) 
  
model = squareBody(model, "cockpit", 0, -172+y, 31, 
[12,12,18,20,20,20,18,8,8,8], #width
[10,14,12,12,12,12,12,12,12,12], #height
[0,0,0,0,0,0,0,0,0,0], #x
[-65,-60,-45,-30,-5,20,26,33,50,60], #y
[0,0,1,0,0,0,0,0,-3,-10], #z
[4,4,9,4], [4,4,9,9,9,4], 9, 3) #stuff

model = squareBody(model, "cockpitSides", 0, -232+y, 0, 
[10,40,60,60,60,60,60,40,60,60,], #width
[8,8,8,8,8,8,8,8,8,8,8], #height
[0,0,0,0,0,0,0,0,0,0], #x
[-85,-70,-45,-30,-5,20,40,60], #y
[0,0,1,0,0,0,0,0,-3,-10], #z
3, [3,9,3,9,9,3], 3, 3) #stuff

model = squareBody(model, "gunsProtectionTop", 172, 62+y, -12, 
[12,12,12,12], #width
[2,8,8,8], #height
[0,0,0,0,0,0,0,0,0,0], #x
[-85,-70,0,20], #y
[6,0,0,-10,0,0,0,0], #z
1, 1, 1, 3, true, true, false, true, true) #stuff

model = squareBody(model, "gunsProtectionBottom", 172, 62+y, -32, 
[12,12,12,12], #width
[2,8,8,8], #height
[0,0,0,0,0,0,0,0,0,0], #x
[-85,-70,0,20], #y
[-6,0,0,10,0,0,0,0], #z
1, 1, 1, 3, false, true, true, true, true) #stuff###

return model
