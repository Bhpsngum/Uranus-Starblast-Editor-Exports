y = -70

multiplyArrays = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m[i])
  return k;

addArrays = (arr, m, mult=1) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m[i]*mult)
  return k;
  
multiplyArray = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m)
  return k;

addArray = (arr, m, mult=1) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m*mult)
  return k;

circle = (m, id, xx, yy, zz, segments, radPosY, radPosZ, tx, h=1) ->
  widths = [];
  heights = [];
  posx = [];
  for i in [0..radPosY.length]
    posx.push(0);
    heights.push(h);
    widths.push(radPosY[i]*Math.tan(Math.PI/segments))
  for i in [0..segments] by 1
    m.bodies[id+"segment"+i] = 
      section_segments: 4
      offset:
        x: xx
        y: yy
        z: zz
      position:
        x: posx
        y: radPosY
        z: radPosZ
      width: widths
      height: heights
      angle: 360*(i/segments)
      texture: tx
  return m

squareBody = (model, id, xx, yy, zz, w, h, posx, posy, posz, txtop, txsides, txbottom, bump, close=false) ->
  flatw = [];
  flath = [];
  for i in [0..w.length]
    flatw.push(bump)
    flath.push(bump)
  
  if(close)
    posx.unshift(posx[0])
    posy.unshift(posy[0])
    posz.unshift(posz[0])
    flatw.unshift(0)
    flath.unshift(0)
    w.unshift(w[0])
    h.unshift(h[0])
    posx.push(posx[posx.length-1])
    posy.push(posy[posy.length-1])
    posz.push(posz[posz.length-1])
    flatw.push(0)
    flath.push(0)
    w.push(w[w.length-1])
    h.push(h[h.length-1])

  
  sides = 
    section_segments: 4
    offset:
      x: xx+0.01
      y: yy
      z: zz
    position:
      x: addArrays(posx,w,1)
      y: posy
      z: posz
    width: flatw
    height: h
    texture: txsides
  top = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h)
    width: w
    height: flath
    texture: txtop
  bottom = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h,-1)
    width: w
    height: flath
    texture: txbottom
    
  model.bodies[id+"t"] = top;
  model.bodies[id+"b"] = bottom;
  model.bodies[id+"sides"] = sides;
    
  return model;
  
skewedCircleWing = (xx, yy, zz, segments, radius, widths, positions, bumpPos, bumpH, tx, double=false, dir=1, startAt=0, seg=0, freestyle=false) ->
  lengths = [];
  angles = [];
  lengths.push(0);
  angles.push(0)
  widths.unshift(0);
  positions.unshift(positions[0]);
  addAng = 0
  angMult = 1
  if(dir<0)
    addAng = 180
    angMult = -1
  loopFor = segments-1
    
  if(seg!=0)
    loopFor = seg
  for i in [0..loopFor]
    m = 1
    if((i==0||i==segments-1)&&!freestyle)
      m = 0.5
    lengths.push(m*radius*Math.tan(Math.PI/(segments-1)))
    angles.push(startAt+addAng+angMult*i/(segments-1)*57.3*Math.PI)

  widths = widths.splice(0,loopFor+3)
  positions = positions.splice(0,loopFor+3)
  ###
  if(double)
    for i in [0..segments-1]
      m = 1
      if(i==0||i==segments-1)
        m = 0.5
      lengths.push(m*radius*Math.tan(Math.PI/(segments-1)))
      angles.push(i/(segments-1)*57.3*Math.PI+180)
      positions.push(positions[i+1])
      widths.push(widths[i+1])###
  widths.push(0);
  positions.push(positions[positions.length-1])
  angles.push(angles[angles.length-1]);
  lengths.push(0)
  
  return k =
    length: lengths
    width: widths
    angle: angles
    position: positions
    doubleside: true
    bump:
      position: bumpPos
      size: bumpH
    texture: tx
    offset:
      x: xx
      y: yy
      z: zz-(radius/Math.cos(Math.PI/(segments-1)))
    
reactorPipes = (a) ->
  return k =
      section_segments: 6
      offset:
        x: 0.01
        y: 90+y
        z: 22
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-40,-37,-35,-30,-20]
        z: [-15,-6,-4,-1,0,0,0,0,0]
      width: [3,3,3,3,3]
      height: [3,3,3,3,3]
      angle:a
      texture: [13]
      
gun = (xx, yy, zz) ->
  return k =
    section_segments: 6
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0,0,0,0]
      y: [-20,-30,-25,0,5,40,45,80,85]
      z: [0,0,0,0,0,0,0,0,0,0,0,0]
    width: [0,5,7,7,5,5,7,7,0]
    height: [0,5,7,7,5,5,7,7,0]
    texture: [16.8,8,18,8,3,3.8] 
    laser:
      damage: [6,12]
      rate: 2
      type: 1
      speed: [150,240]
      number: 1
      error: 0
      
sideEngine = (xx, yy, zz) ->
  return k =
    section_segments: 6
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: [0,0,0,0,0,0,0,0]
      y: [-30,0,20,10,0]
      z: [0,0,0,0,0,0,0,0]
    width: [7,7,5,0]
    height: [7,7,5,0]
    texture: [18,13,16.8] 
    propeller:true
      
wingFixedBumps = (xx, yy, zz, lengths, widths, angles, positions, tx, bumpPos, bumpS, toler) ->
  anew = [];
  l = [];
  w = [];
  p = [];
  for i in [0..angles.length-1]
    anew.push(angles[i])
    l.push(lengths[i])
    w.push(widths[i])
    p.push(positions[i])
    if(i==angles.length-1)
      break;
    if(Math.abs(angles[i]-angles[i+1])>toler)
      anew.push(angles[i])
      l.push(0)
      w.push(widths[i])
      p.push(positions[i])
  
  l.unshift(0)
  w.unshift(0)
  p.unshift(positions[0])
  anew.unshift(anew[0])
  
  w.push(widths[widths.length-1])
  p.push(positions[positions.length-1])
  
  l.push(0)
  w.push(widths[widths.length-1])
  p.push(positions[positions.length-1])
  anew.push(anew[anew.length-1])
  
  return k = 
    doubleside: true
    offset:
      x: xx
      y: yy
      z: zz
    length: l
    width: w
    angle: anew
    position: p
    texture: tx
    bump:
      position: bumpPos
      size: bumpS

model =
  name: 'Ringed Interceptor'
  level: 4
  model: 6
  size: 0.85
  specs:
    shield:
      capacity: [100,150]
      reload: [3,5]
    generator:
      capacity: [140,190]
      reload: [18,28]
    ship:
      mass: 130
      speed: [110,135]
      rotation: [35,50]
      acceleration: [140,170]
  bodies:
      
    frontEnd:
      section_segments: 6
      offset:
        x: 0
        y: -165+y
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [0,-3,0,5,10]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,10,18,19,10]
      height: [0,7,12,12,10]
      texture: [12,18,1,1] 
    frontEndSides:
      section_segments: 6
      offset:
        x: 14
        y: -150+y
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [0,5,15,17]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,10,10,0,10]
      height: [0,6,6,0,10]
      texture: [18] 
      angle:90
    
    antennaeLarge:
      section_segments: 4
      offset:
        x: 0
        y: -165+y
        z: 0
      position:
        x: addArray([0,0,0,0,0,0,0,0],25)
        y: [-100,-90,-80,-70,10]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,2,2,1,1]
      height: [0,2,2,1,1]
      texture: [18,17,18,3]
    antennaeSmol:
      section_segments: 4
      offset:
        x: 0
        y: -165+y
        z: 3
      position:
        x: addArray([0,0,0,0,0,0,0,0],21)
        y: [-80,-70,-50,-40,10]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,2,2,1,1]
      height: [0,2,2,1,1]
      texture: [18,18,18,3] 
    
    backMain:
      section_segments: 6
      offset:
        x: 5
        y: 54+y
        z: 5
      position:
        x: [0,0,0,-5,-5,-5,-5,-5,-5]
        y: [-10,-5,5,30,60,70,80,80]
        z: [0,0,0,0,0,0,0,0,0]
      width: [10,25,30,40,40,30,10,0]
      height: [10,20,20,20,20,20,5,0]
      texture: [3.8] 
      
    backCockpitSmooth:
      section_segments: 6
      offset:
        x: 0
        y: 45+y
        z: 0
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-10,0,20,30,-10,0,40,60]
        z: [20,23,23,10,-10,-13,-13,-0,0,0,0]
      width: [12,12,12,12,12,12,12,12]
      height: [0,4,4,0,0,4,4,0]
      texture: [3.8] 
      
    mainsail:
      section_segments: 8
      offset:
        x: 0
        y: 135+y
        z: 10
      position:
        x: [0,0,0,0,0,0,0,0]
        y: [-30,0,20,80,0]
        z: [-5,0,0,0,0,0,0,0,0]
      width: [20,15,15,10,0]
      height: [15,15,15,10,0]
      texture: [4,8,13,17] 
      propeller:true
    
    pipes1:reactorPipes(30)
    pipes2:reactorPipes(50)
    pipes3:reactorPipes(130)
    pipes4:reactorPipes(150)
    
    gunsT: 
      gun(102,30+y,-13)
    gunsB: 
      gun(95,30+y,-28)
    
    wings:
      section_segments: 6
      offset:
        x: 20
        y: 60+y
        z: 0
      position:
        x: [0,0,0,-25,-28,-30,0,0]
        y: [-10,0,5,20,55,80]
        z: [0,0,0,0,-12,-20,0,0,0]
      width: [40,40,65,20,14,10]
      height: [10,8,8,7,4,0]
      texture: [2.8,2.8,4,63,4] 
      angle:90
      
    backHull1:
      section_segments: 3
      offset:
        x: 0
        y: 135+y
        z: 5
      position:
        x: addArray([-5,-5,-3,-4,-12,0,0,0,0],25)
        y: [-30,-30,0,20,70]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,15,13,10,0]
      height: [0,15,13,10,0]
      texture: [63] 
      propeller:true
    backHull2:
      section_segments: 3
      offset:
        x: 0
        y: 135+y
        z: 5
      position:
        x: addArray(multiplyArray([-5,-5,-3,-4,-12,0,0,0,0],-1),-25)
        y: [-30,-30,0,20,70]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,15,13,10,0]
      height: [0,15,13,10,0]
      texture: [63] 
      propeller:true
    backHullUnderside:
      section_segments: 6
      offset:
        x: 25
        y: 135+y
        z: 0
      position:
        x: [0,-3,-3,-5,-12,0]
        y: [-50,-30,0,20,70]
        z: [0,0,-5,-3,5,0,0,0,0]
      width: [0,15,13,10,0]
      height: [0,6,6,6,0]
      texture: [3.8,2.8,0.9,63] 
      propeller:true
      
    sideEnginesT: sideEngine(101,115+y,-19)
    sideEnginesB: sideEngine(96,115+y,-27)
    
  wings:
    circleMain: skewedCircleWing(0,90+y,115,7,48,[60,60,50,40,100,100,100],
    [0,0,0,0,0,0,0,0],0,10,63,false,0,-180,2)
    circleFull: skewedCircleWing(0,90+y,125,7,52,addArray([100,100,100,100,95,85,100,100],-75),
    [0,0,0,0,0,0,0,0],0,5,4,false,0,-180,4)
    engineShielding: skewedCircleWing(0,180+y,10,7,14,[30,30,50,50,50,50,30,30],
    [10,10,0,0,0,0,10,10],30,10,63,false,0,0)
      
    sideGunsFrontShielding: wingFixedBumps(92, 60+y, -14, 
    [15,20,30,20,22], 
    [30,30,30,30,30,30,30,30], 
    [70,-30,-110,-190,70], 
    [0,0,0,0,0,0,0,0,0,0,0],
    63, -30, 10, 5)
    
    sideGunsMainShielding: wingFixedBumps(92, 90+y, -14, 
    [15,20,30,20,22], 
    [30,30,30,30,30,30,30,30], 
    [70,-30,-110,-190,70], 
    [0,0,0,0,0,0,0,0,0,0,0],
    4, 0, 5, 5)
    
    sideGunsBackShielding: wingFixedBumps(93, 110+y, -17, 
    multiplyArray([15,20,30,20,22],0.7), 
    [40,60,40,60,40], 
    [70,-30,-110,-190,70], 
    [0,0,0,0,0,0,0,0,0,0,0],
    4, -10, 18, 5)

      
model = squareBody(model, "main", 0, 0+y, 0, 
[4,16,17,18,18,20], #width
[4,8,9,10,10,10,10], #height
[0,0,0,0,0,0,0], #x
[-165,-160,-100,-40,10,50], #y
[0,0,0,0,0,0,0], #z
[63,63,63,11,12], [63,63,12,18,4], [63,63,13,4,4], 3) #stuff

model = squareBody(model, "cockpit", 0, 42+y, 10, 
[10,10,10,10,10], #width
[6,8,10,10,10], #height
[0,0,0,0,0,0,0], #x
[-60,-45,-20,5,10], #y
[-6,0,0,0,0,0,0], #z
[9,9,4], [18,9,9,4], 9, 3) #stuff

model = squareBody(model, "front", 0, -76+y, 0, 
[30,30,10], #width
[6,6,6], #height
[0,0,0], #x
[-80,-45,-20], #y
[0,0,0], #z
[63], [63], 63, 1, true) #stuff

model = circle(model, "c", 0, 90+y, 25, 12, [0,5,6,20,22,25,30], [40,40,2,2,0,0,-15], [4,3,18,3,4,4],0) 

return model