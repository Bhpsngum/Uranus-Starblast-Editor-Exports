multiplyArrays = (arr, m) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]*m[i])
  return k;

addArrays = (arr, m, mult=1) ->
  k = [];
  for i in [0..arr.length]
    k.push(arr[i]+m[i]*mult)
  return k;

squareBody = (model, id, xx, yy, zz, w, h, posx, posy, posz, txtop, txsides, txbottom, bump) ->
  flatw = [];
  flath = [];
  for i in [0..w.length]
    flatw.push(bump)
    flath.push(bump)
  
  sides = 
    section_segments: 4
    offset:
      x: xx+0.01
      y: yy
      z: zz
    position:
      x: addArrays(posx,w,1)
      y: posy
      z: posz
    width: flatw
    height: h
    texture: txsides
  top = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h)
    width: w
    height: flath
    texture: txtop
  bottom = 
    section_segments: 4
    offset:
      x: xx
      y: yy
      z: zz
    position:
      x: posx
      y: posy
      z: addArrays(posz,h,-1)
    width: w
    height: flath
    texture: txbottom
    
  model.bodies[id+"t"] = top;
  model.bodies[id+"b"] = bottom;
  model.bodies[id+"sides"] = sides;
    
  return model;

model =
  name: 'Heavy Cutester'
  level: 1
  model: 1
  size: 1.4
  specs:
    shield:
      capacity: [180,200]
      reload: [3,6]
    generator:
      capacity: [100,120]
      reload: [30,37]
    ship:
      mass: 160
      speed: [100,125]
      rotation: [30,50]
      acceleration: [80,120]
  specs:
    shield:
      capacity: [175,225]
      reload: [3,6]
    generator:
      capacity: [100,150]
      reload: [30,40]
    ship:
      mass: 120
      speed: [80,110]
      rotation: [50,100]
      acceleration: [110,140]
  bodies:
    main2:
      section_segments: 12
      offset:
        x: 0
        y: -40
        z: 10
      position:
        x: [0,0,0,0,0,0,0,0,0]
        y: [-100,-80,-90,-50,0,50,75,100,90]
        z: [0,0,0,0,0,0,0,0,0]
      width: [0,5,15,25,40,25,22,20,0]
      height: [0,5,10,30,25,20,15,10,0]
      propeller: true
      texture: [4,4,1,1,1,2,13,13]
      laser:
        damage: [70,100]
        rate: 1
        type: 2
        speed: [130,180]
        number: 1
        recoil: 100
        error: 0
    engines:
      section_segments: 6
      offset:
        x: 40
        y: 30
        z: 0
      position:
        x: [-10,-10,0,0,0,0,0]
        y: [-60,-50,-30,0,30,50,40]
        z: [0,0,0,0,0,0,0]
      width: [0,15,15,20,15,10,0]
      height: [0,13,15,20,15,10,0]
      texture: [3,3,63,63,12,17]
      angle: 0
      propeller: true
    intakes:
      section_segments: 6
      offset:
        x: 30
        y: -60
        z: 10
      position:
        x: [-3,-3,-8,0,-3,-14,0]
        y: [-30,-45,-40,0,40,60]
        z: [0,0,0,-5,-10,0,0]
      width: [0,6,16,15,10,10]
      height: [0,10,12,15,15,10]
      texture: [16.8,2.8,1.8,1.8,2.8]
      angle: 0
  wings:
    main:
      length: [15,25]
      width: [30,30,20]
      angle: [60,-30]
      position: [-40,-20,0]
      texture: [4,63]
      doubleside: true
      bump:
        position: 30
        size: 10
      offset:
        x: 10
        y: 50
        z: 10
        
model = squareBody(model, "cockpit", 0, -22, 30, 
[6,7,8,10,10,10], #width
[1,2,4,8,8,10], #height
[0,0,0,0,0,0,0], #x
[-100,-95,-65,-20,5,40], #y
[-10,-6,7,4,1,-16,0,0], #z
[1,9,9,9,1], [1,1,9,9,1], 1, 1) #stuff

yoff = -10
for k,v of model.bodies
  v.offset.y -= yoff
for k,v of model.wings
  v.offset.y -= yoff


return model;